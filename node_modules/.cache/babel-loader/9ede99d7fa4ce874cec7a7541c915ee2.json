{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antar\\\\Desktop\\\\test_folder\\\\projectmouse\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n    this.styles = {\n      fontSize: 50,\n      fontWeight: 'bold'\n    };\n\n    this.eventhandleIncrement = () =>\n    /*product*/\n    {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.eventhandleDecrement = () => {\n      this.setState({\n        count: this.state.count - 1\n      });\n    };\n  }\n\n  render() {\n    console.log('props', this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: this.styles,\n      className: this.getBadgeClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.eventhandleIncrement(),\n      className: \"butt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.eventhandleDecrement,\n      className: \"butt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Decrement\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n  getBadgeClasses() {\n    let classes = 'answer-';\n    classes += this.state.count === 0 ? 'bad' : 'good';\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nclass Counter2 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      tags: [\n        /*'tag1', 'tag2', 'tag3'*/\n      ]\n    };\n  }\n\n  renderTags() {\n    if (this.state.tags.length == 0) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"There are no tags\");\n    } else {\n      return React.createElement(\"ul\", {\n        className: \"list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.tags.map(tag => React.createElement(\"li\", {\n        key: tag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, tag)));\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.tags.length === 0 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Please create a new tag\"), this.renderTags());\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/antar/Desktop/test_folder/projectmouse/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","styles","fontSize","fontWeight","eventhandleIncrement","setState","eventhandleDecrement","render","console","log","props","getBadgeClasses","formatCount","classes","Counter2","tags","renderTags","length","map","tag"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Counter extends Component{\r\n\tstate = {\r\n\t\tcount: 0,\r\n\t};\r\n\r\n\tstyles = {\r\n\t\tfontSize:50,\r\n\t\tfontWeight:'bold',\r\n\t};\r\n\r\n/*\tbinds event handlers\r\n\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.handleIncrement = this.handleIncrement.bind(this);\r\n\t}*/\r\n\r\n\teventhandleIncrement=(/*product*/)=>{\r\n\t\tthis.setState({count:this.state.count + 1});\r\n\t};\r\n\r\n\teventhandleDecrement=()=>{\r\n\t\tthis.setState({count:this.state.count - 1});\r\n\t};\r\n\r\n\trender(){\r\n\t\tconsole.log('props', this.props);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<span style={this.styles} className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<button onClick={()=>this.eventhandleIncrement(/*product*/)} className=\"butt\">Increment</button>\r\n\t\t\t\t<br />\r\n\t\t\t\t<button onClick={this.eventhandleDecrement} className=\"butt\">Decrement</button>\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tgetBadgeClasses(){\r\n\t\tlet classes = 'answer-';\r\n\t\tclasses += (this.state.count === 0) ? 'bad' : 'good';\r\n\t\treturn classes;\r\n\t}\r\n\r\n\tformatCount(){\r\n\t\tconst {count} = this.state;\r\n\t\treturn count === 0 ? 'Zero' : count;\r\n\t}\r\n}\r\n\r\nclass Counter2 extends Component{\r\n\tstate = {\r\n\t\tcount: 0,\r\n\t\ttags: [/*'tag1', 'tag2', 'tag3'*/],\r\n\t};\r\n\r\n\trenderTags(){\r\n\t\tif(this.state.tags.length == 0){\r\n\t\t\treturn <p>There are no tags</p>;\r\n\t\t} else{\r\n\t\t\treturn \t<ul className=\"list\">\r\n\t\t\t\t\t\t{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}\r\n\t\t\t\t\t</ul>\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{this.state.tags.length === 0 && <p>Please create a new tag</p>}\r\n\t\t\t\t{this.renderTags()}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}